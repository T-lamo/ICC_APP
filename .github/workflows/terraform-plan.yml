name: 'Terraform Plan'
on:
    push:
        branches:
        - develop
env:
    TF_CLOUD_ORGANIZATION: "ICC_CHURCH"
    TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
    TF_WORKSPACE: "icc_application"
    CONFIG_DIRECTORY: "terraform"
jobs:
  build-and-push-mla-service-gcr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Docker CLI
        run: echo '${{ secrets.GOOGLE_CREDENTIALS }}' > 'keyfile.json' && gcloud auth activate-service-account --key-file='keyfile.json' && gcloud auth configure-docker

      - name: Build and Push Mla Service Docker image
        working-directory: ICC_MLA_SERVICE
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.MLA_SERVICE_IMAGE }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.MLA_SERVICE_IMAGE }}

      - name: Build and Push iccng  Docker image
        working-directory: ICCNG
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ICCNG_IMAGE }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ICCNG_IMAGE }}


  terraform-checkup:
      name: "Terraform Plan"
      runs-on: ubuntu-latest
      needs: build-and-push-mla-service-gcr
      defaults:
        run:
          working-directory: ${{ env.CONFIG_DIRECTORY }}
          
      permissions:
          contents: read
          pull-requests: write

      steps:
          - name: Checkout
            uses: actions/checkout@v3

          - name: Upload Configuration
            uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
            id: plan-upload
            with:
              workspace: ${{ env.TF_WORKSPACE }}
              directory: ${{ env.CONFIG_DIRECTORY }}
              speculative: true

          - name: Create Plan Run
            uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
            id: plan-run
            with:
              workspace: ${{ env.TF_WORKSPACE }}
              configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
              plan_only: true

        

  Deployment:
    name: "Terraform Apply"
    needs: terraform-checkup
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3


      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}




      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

  gcr_clean_up:
    runs-on: ubuntu-latest
    needs: Deployment
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure Docker CLI
        run: echo '${{ secrets.GOOGLE_CREDENTIALS }}' > 'keyfile.json' && gcloud auth activate-service-account --key-file='keyfile.json' && gcloud auth configure-docker

      - name: Delete Containers Image
        run: |
          gcloud container images delete gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.MLA_SERVICE_IMAGE }} .
          gcloud container images delete  gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ICCNG_IMAGE }} .
